Dette dokument anvender UTF-8 encoding.
//Test tekst fra TestRepo

Formål:
Dette dokument indholder noter om anvendelsen af GIT. Noter der er startet op i forbindelse med læsning af 'Git in practice'.

Indhold:
1. Starting with GIT.
1. Fejl ved GIT commit kommentar.
2. Sæt GIT op til at anvende UTF-8.e
3. Git Status eksempler.
4. Git Show eksempler.


1.  Starting with GIT.
A. Install git.
B. Config git with your account. Git config --global user.name "xx". Git config --global user.email "xx"

2. Create local Repo. 
A. Git init GitExercises
B. Add loacl working directory files (with changes) to the index stagging area for next commit. Git Add <file> or <Files>
D.  Commit --message "Some commit text"
 
3. Help on git Commands: Git --Help

4. Get information on local and remote repo:
A. Git Status
B. Git Show
C. Git Log. Press Q to exit.

5. View history: Gitk

6. View differences between commits. 
A. Standard information: git diff master~1 master.
B. Short information: git diff --stat master~1 master.

6. Remote repository setup. (Chapter 2.
A. Set up: git remote add origin httpe://github.com/BrianGSC/GitExercises
B. Verify successfull remote cration: git remote --verbose
C. Setup new remote from local repo: git push --set-upstream origin master

7. Remote push.
A. After setup (see 6.C) just use: git push.

8. Git Clone - Complete copy of remote repository to local folder.
A. Find place to clone ot: C:\sub\github
B. git clone https://github.com/BrianGSC/GitExercises
C. Places the GitExercises in that folder: C:\sub\github\GitExercises

9. Git pull. Downloads new commits from remote and merges the remote branch into current branch.
A. If no changes - output: Already up to date.

10. Git fetch. Downloads commits but no merge.
B. Kan ikke se Fetch ændringer i GitK. Måske anvende GitKranken eller QGit.
C. Anbefaler at anvende Git Fetch - så kan man merge eller rebase hvis nødvendigt.

11. Git branch. When you want to commit - that are not ready for public.
A. git branch chapter-two  (No output)
B. verify that branch were created: git branch
C.Eg. commit broken or incomplete features.
D. A tag is the same as a branch - but points to a specific commit. Eg. tag: Release version 1.
E. A branch alows for two seperate developement tracks.
F. Create a new brach when you want to work on a bug or create a new feature.
G. Kan lave branch fra tidligere version: git branch chapter-two master~1.
H. Track: Git branch --track : sets upstream

12. Local checkout.
A. Git checkout chapter-two (checks out a branch can be master.)
Switched to branch 'chapter-two'
M       GitNoter.txt

13. Pushing a local branch remotely
A. Stay on the branc you want to sent to remot:
git checkout chapter-two, then push:
git push --set-upstream origin chapter-two

14-1. Merging an existing branch into the current branch: git merge
A. Goto master - that you want to merge into.
git checkout master -> then run:
git merge chapter-two.

14-2. Merge conflicts.
A. Conflict markers:  
<<<<         -> Incomming markers
=======      -> Branch seperator
>>>>>>>      -> Current markers
B. Need to handle merge conflicts manualle, by searching the file, and removeing what needs to be removed.
C. When conflicts have been resolved, a merge commit can be made.

14-3. Rebasing
A. A rebase is a method of rewriting history in Git that is similar to a merge
B. Changing the parent of a commit to point to another.
C. Used to pulling changes from one branch into another and merging.

15. Deleting a remote branch
A. Maker sure you are on master: git branch
git checkout master
B. git push.
C. git push --delete origin chapter-two

16. Deleting the current local branch after merging
A. Maker sure you are on master: git branch
git checkout master
B. Delete local branch.
git branch --delete chapter-two


1. Fejl ved GIT Commit kommentar.
Fik en fejl pga. enkelt anførselstegn i comment.
Det hjalp at anvende dobbelt anførselsteg i stedet for enkelt.
Ser ud til at enkelt kan anvendes i OSX og Linux.

2 Sæt GIT op til at anvende UTF-8.
git config --global gui.encoding utf-8

3. Git status eksempler:
a. En lokal commit før push.
git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

b. Efter push.
git status
On branch master
Your branch is up to date with 'origin/master'.

c. En ændret fil ikke stacked.
git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   GitNoter.txt

no changes added to commit (use "git add" and/or "git commit -a")

nothing to commit, working tree clean

4. Git show eksempler.
A. En lokal commit før push.
git show
commit 9c61c1bccc963a38005069db42736080b3990642 (HEAD -> master)
Author: Brian Christensen <tinebrian@adr.dk>
Date:   Fri Nov 23 13:27:04 2018 +0100

    Added document - GITNoter.txt for notes related to using GIT

diff --git a/GitNoter.txt b/GitNoter.txt
new file mode 100644
index 0000000..9372232
--- /dev/null
+++ b/GitNoter.txt
@@ -0,0 +1,17 @@
+Dette dokument anvender UTF-8 encoding.
+
+Form<C3><A5>l:
+Dette dokument indholder noter om anvendelsen af GIT. Noter der er startet op i forbindelse med l<C3><A6>sning af 'Git in practice'.
+
+Indhold:
+1. Fejl ved GIT commit kommentar.
+2. S<C3><A6>t GIT op til at anvende UTF-8.
+
+Fejl ved GIT Commit kommentar.
+Fik en fejl pga. enkelt anf<C3><B8>rselstegn i comment.
+Det hjalp at anvende dobbelt anf<C3><B8>rselsteg i stedet for enkelt.
+Ser ud til at enkelt kan anvendes i OSX og Linux.
+
+S<C3><A6>t GIT op til at anvende UTF-8.
+git config --global gui.encoding utf-8

b. Efter push.
git show
commit 9c61c1bccc963a38005069db42736080b3990642 (HEAD -> master, origin/master)
Author: Brian Christensen <tinebrian@adr.dk>
Date:   Fri Nov 23 13:27:04 2018 +0100

    Added document - GITNoter.txt for notes related to using GIT

diff --git a/GitNoter.txt b/GitNoter.txt
new file mode 100644
index 0000000..9372232
--- /dev/null
+++ b/GitNoter.txt
@@ -0,0 +1,17 @@
+Dette dokument anvender UTF-8 encoding.
+
+Form<C3><A5>l:
+Dette dokument indholder noter om anvendelsen af GIT. Noter der er startet op i forbindelse med l<C3><A6>sning af 'Git in practice'.
+
+Indhold:
+1. Fejl ved GIT commit kommentar.
+2. S<C3><A6>t GIT op til at anvende UTF-8.
+
+Fejl ved GIT Commit kommentar.
+Fik en fejl pga. enkelt anf<C3><B8>rselstegn i comment.
+Det hjalp at anvende dobbelt anf<C3><B8>rselsteg i stedet for enkelt.
+Ser ud til at enkelt kan anvendes i OSX og Linux.
+
+S<C3><A6>t GIT op til at anvende UTF-8.
+git config --global gui.encoding utf-8